/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package electivesubject;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author vinay
 */
enum deptEnum{MECH, PROD, CIVIL, COMP, IT, ELEC, PLANNING, ENTC, INSTRU, META};

public class LoadFileForm extends javax.swing.JFrame {

    /**
     * Creates new form LoadFileForm
     */
    public LoadFileForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        syTextField = new javax.swing.JTextField();
        tyTextField = new javax.swing.JTextField();
        btechTextField = new javax.swing.JTextField();
        subjectTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        loadFileButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Load Input Files");

        jButton1.setText("Choose file...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Choose file...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Choose file..");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Choose file...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        syTextField.setEditable(false);
        syTextField.setText("NONE");

        tyTextField.setEditable(false);
        tyTextField.setText("NONE");

        btechTextField.setEditable(false);
        btechTextField.setText("NONE");

        subjectTextField.setEditable(false);
        subjectTextField.setText("NONE");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("SY Student :");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("TY Student :");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Btech Student :");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("Elective Subject :");

        loadFileButton.setText("Load Above Files");
        loadFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Select Input Files");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(syTextField)
                                    .addComponent(tyTextField)
                                    .addComponent(btechTextField)
                                    .addComponent(subjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(loadFileButton))
                            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(syTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(tyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(btechTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(subjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(36, 36, 36)
                .addComponent(loadFileButton)
                .addGap(18, 18, 18)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        setBounds(400, 200, 578, 449);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        int retValue = chooser.showDialog(null, "Select File");
        if(retValue == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            syTextField.setText(file.getAbsolutePath());
        }
        else {
            JOptionPane.showMessageDialog(this, "No permission to access File", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser chooser = new JFileChooser();
        int retValue = chooser.showDialog(null, "Select File");
        if(retValue == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            btechTextField.setText(file.getAbsolutePath());
        }
        else {
            JOptionPane.showMessageDialog(this, "No permission to access File", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser chooser = new JFileChooser();
        int retValue = chooser.showDialog(null, "Select File");
        if(retValue == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            tyTextField.setText(file.getAbsolutePath());
        }
        else {
            JOptionPane.showMessageDialog(this, "No permission to access File", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       JFileChooser chooser = new JFileChooser();
        int retValue = chooser.showDialog(null, "Select File");
        if(retValue == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            //Save in gloabl variable
            subjectTextField.setText(file.getAbsolutePath());
        }
        else {
            JOptionPane.showMessageDialog(this, "No permission to access File", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void loadFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileButtonActionPerformed
        String[] fileNames = new String[4];
        fileNames[0] = syTextField.getText();
        fileNames[1] = tyTextField.getText();
        fileNames[2] = btechTextField.getText();
        fileNames[3] = subjectTextField.getText();
        String msg = "";
        Boolean prob = false;
        if("NONE".equals(fileNames[0])) {
            prob = true;
            msg += "SY File not Specified\n";
        }
        if("NONE".equals(fileNames[1])) {
            prob = true;
            msg += "TY File not Specified\n";
        }
        if("NONE".equals(fileNames[2])) {
            prob = true;
            msg += "BTech File not Specified\n";
        }
        if("NONE".equals(fileNames[3])) {
            prob = true;
            msg += "Elective Subject File not Specified\n";
        }
          
        if(prob) {
            JOptionPane.showMessageDialog(this, msg, "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        /*Reading Student info*/
        for(int i = 0; i <=2; i++) {
            File file = new File(fileNames[i]);
            boolean read = false;
            try {
                try (Scanner scan = new Scanner(file)) {
                    int line = 0;
                    
                    while(scan.hasNext()) {
                        line++;
                        prob = false;
                        int mis = 0;
                        float cgpa = 0;
                        /*MIS ID*/
                        if(scan.hasNextInt()) {
                            mis = scan.nextInt();
                            if(mis < 100000000) {
                                prob = true;
                            }
                        }
                        else {
                            prob = true;
                        }
                        /*CGPA*/
                        if(scan.hasNextFloat()) {
                            cgpa = scan.nextFloat();
                            System.out.println("CGPA got: "+cgpa);
                            if(cgpa > 10) {
                                prob = true;
                            }
                        }
                        else {
                            prob = true;
                        }
                        if(!prob) {
                            Student s = new Student(mis, cgpa);
                            Global.addIntoCGPAList(i, s, cgpa);
                            Global.addIntoDeptList(i, s, mis);
                            read = true;
                        }
                        else {
                            scan.nextLine();
                            System.out.println("Problem in Reading Line: "+line);
                        }
                    }
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "File not Found in system:" + fileNames[i]+"\n Load another file", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(!read) {
                JOptionPane.showMessageDialog(this, "Problem in reading file (Empty or IImproper format):" + fileNames[i]+"\n Load another file", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            System.out.println("Read file");
            
        }
        /*Reading Elective subject file*/
        File file = new File(fileNames[3]);
        
            FileReader inp = null;
        try {
            inp = new FileReader(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LoadFileForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            boolean read = false;
            try (Scanner scan = new Scanner(inp)) {
                int line = 0;
                byte subjId = 0;
                System.out.println(scan.hasNext());
                while(scan.hasNext()) {
                    line++;
                    prob = false;
                    String name = null, dept = null;
                    Short maxCap = 0;
                    Byte year = 0;
                    if(scan.hasNext()) {
                        name = scan.next();
                    }
                    else {
                        prob = true;
                        System.out.println("Prob 1\n");
                    }
                    if(scan.hasNext()) {
                        dept = scan.next();
                    }
                    else {
                        prob = true;
                        System.out.println("Prob 2\n");
                    }
                    if(scan.hasNextShort()) {
                        maxCap = scan.nextShort();
                    }
                    else {
                        prob = true;
                        System.out.println("Prob 3\n");
                    }
                    if(scan.hasNextByte()) {
                        year = scan.nextByte();
                        if(year > 4 || year < 2) {
                            prob = true;
                        }
                    }
                    else {
                        prob = true;
                        System.out.println("Prob 4\n");
                    }
                    if(!prob) {
                        deptEnum t = deptEnum.valueOf(dept);
                        Subject s;
                        s = new Subject(name, t.ordinal(), (byte) ((byte)subjId + 1), maxCap, year);
                        Global.subjectArray.addLast(s);
                        subjId++;
                        //add to cgpa list
                        // add to class list
                        read = true;
                    }
                    else {
                        scan.nextLine();
                        System.out.println("Problem in Reading Line (Elective subject line): "+line);
                    }
                }
            }
            if(!read) {
                JOptionPane.showMessageDialog(this, "Problem in reading file (Empty or IImproper format):" + fileNames[3]+"\n Load another file", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            System.out.println("Read file");
        Global.printList();
        MainMenuForm.allocateButton.setEnabled(true);
       MainMenuForm.fillFormButton.setEnabled(true);
        MainMenuForm.loadform.dispose();
    }//GEN-LAST:event_loadFileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoadFileForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField btechTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton loadFileButton;
    public static javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField subjectTextField;
    private javax.swing.JTextField syTextField;
    private javax.swing.JTextField tyTextField;
    // End of variables declaration//GEN-END:variables
}
